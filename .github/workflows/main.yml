name: Create-YouTube-Plus-App

on:
  workflow_dispatch:
    inputs:
      enable_youpip:
        description: "Integrate YouPiP"
        type: boolean
        required: true
        default: false
      enable_ytuhd:
        description: "Integrate YTUHD"
        type: boolean
        required: true
        default: false
      enable_yq:
        description: "Integrate YouQuality"
        type: boolean
        required: true
        default: false
      enable_ryd:
        description: "Integrate Return YouTube Dislikes"
        type: boolean
        required: true
        default: false
      enable_demc:
        description: "Integrate DontEatMyContent"
        type: boolean
        required: true
        default: false
      ipa_url:
        description: "URL to the decrypted IPA file (direct link or Google Drive share link)"
        default: ""
        required: true
        type: string
      file_name:
        description: "Custom filename for the downloaded IPA (must end with .ipa)"
        default: "youtube.ipa"
        required: false
        type: string
      tweak_version:
        description: "Version from dayanch96/YTLite/releases (e.g., 5.2b3)"
        default: "5.2b3"
        required: true
        type: string
      display_name:
        description: "App Name (Optional)"
        default: "YouTube"
        required: true
        type: string
      bundle_id:
        description: "BundleID (Optional)"
        default: "com.google.ios.youtube"
        required: true
        type: string
      info_note:
        description: "TIP: Learn more about integrations in the README via the link below"
        default: "https://github.com/dayanch96/YTLite#tweak-integration-details"
        type: string
        required: false

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: "Build and Inject"
    runs-on: macos-latest
    permissions:
      contents: write

    steps:
      - name: Checkout Main
        uses: actions/checkout@v4
        with:
          path: main
          submodules: recursive

      - name: Hide sensitive inputs
        uses: levibostian/action-hide-sensitive-inputs@v1
        with:
          exclude_inputs: "bundle_id,display_name,enable_demc,enable_ryd,enable_youpip,enable_yq,enable_ytuhd,info_note,tweak_version"

      - name: Install Dependencies
        run: |
          brew install make ldid
          echo "$(brew --prefix make)/libexec/gnubin" >> "$GITHUB_PATH"

      - name: Install cyan (IPA injector)
        run: |
          pipx install --force https://github.com/asdfzxcvbn/pyzule-rw/archive/main.zip
          echo "$HOME/.local/bin" >> "$GITHUB_PATH"

      - name: Install gdown (Google Drive downloader)
        run: |
          pipx install --force gdown
          echo "$HOME/.local/bin" >> "$GITHUB_PATH"

      - name: Download and validate IPA
        shell: bash
        run: |
          set -euo pipefail
          URL="${{ inputs.ipa_url }}"
          NAME="${{ inputs.file_name }}"
          [[ "$NAME" != *.ipa ]] && NAME="${NAME}.ipa"
          OUT="$GITHUB_WORKSPACE/$NAME"

          echo "Requested URL: $URL"
          echo "Target file:   $OUT"

          if [[ "$URL" =~ drive.google.com ]]; then
            echo "Detected Google Drive URL."
            if [[ "$URL" =~ /file/d/([^/]+)/ ]]; then
              FILEID="${BASH_REMATCH[1]}"
            elif [[ "$URL" =~ id=([^&]+) ]]; then
              FILEID="${BASH_REMATCH[1]}"
            else
              echo "::error::Could not extract Google Drive file id from URL."
              exit 1
            fi
            gdown --fuzzy --no-cookies --id "$FILEID" -O "$OUT"
          else
            curl -L --fail --retry 3 --retry-delay 2 \
              -A "GitHubActions/1.0 (+https://github.com)" \
              -o "$OUT" "$URL"
          fi

          echo "Downloaded file:"
          ls -lah "$OUT"
          mime="$(file --mime-type -b "$OUT" || true)"
          if [[ "$mime" == "text/html" || "$mime" == "text/plain" ]]; then
            echo "::error::The URL returned $mime (preview/sign-in page). Ensure sharing is 'Anyone with the link' and use a direct file link."
            exit 1
          fi

          if ! unzip -l "$OUT" >/tmp/ziplist.txt 2>/dev/null; then
            echo "::error::Not a valid ZIP/IPA or file is corrupted."
            exit 1
          fi

          if ! grep -qE ' Payload/[^/]+\.app/' /tmp/ziplist.txt; then
            echo "::warning::No Payload/*.app found. Attempting repack if this is a zipped .app bundleâ€¦"
            tmpdir="$(mktemp -d)"
            unzip -q "$OUT" -d "$tmpdir" || true
            appdir="$(find "$tmpdir" -maxdepth 2 -type d -name '*.app' | head -n 1 || true)"
            if [[ -n "${appdir:-}" ]]; then
              rpdir="$(mktemp -d)"
              mkdir -p "$rpdir/Payload"
              rsync -a "$appdir" "$rpdir/Payload/"
              (cd "$rpdir" && zip -qry "$OUT" Payload)
              echo "Repacked into a proper IPA with Payload/."
            else
              echo "::error::Invalid input: no Payload/*.app and no .app bundle to repack. Provide a decrypted device IPA (not Simulator)."
              exit 1
            fi
          fi

          echo "IPA structure (first 50 lines):"
          unzip -l "$OUT" | head -n 50

          # Pass to later steps
          echo "IPA_IN=$OUT" >> "$GITHUB_ENV"

      - name: Cache Theos
        if: ${{ inputs.enable_youpip || inputs.enable_ytuhd || inputs.enable_yq || inputs.enable_ryd || inputs.enable_demc }}
        id: theos
        uses: actions/cache@v4
        env:
          cache-name: theos_cache_67db2ab
        with:
          path: theos/
          key: ${{ env.cache-name }}
          restore-keys: ${{ env.cache-name }}

      - name: Setup Theos
        if: ${{ (inputs.enable_youpip || inputs.enable_ytuhd || inputs.enable_yq || inputs.enable_ryd || inputs.enable_demc) && steps.theos.outputs.cache-hit != 'true' }}
        uses: actions/checkout@v4
        with:
          repository: theos/theos
          ref: 67db2ab8d950910161730de77c322658ea3e6b44
          path: ${{ github.workspace }}/theos
          submodules: recursive

      - name: Download iOS SDK
        if: ${{ (inputs.enable_youpip || inputs.enable_ytuhd || inputs.enable_yq || inputs.enable_ryd || inputs.enable_demc) && steps.theos.outputs.cache-hit != 'true' }}
        env:
          THEOS: ${{ github.workspace }}/theos
        run: |
          git clone --quiet -n --depth=1 --filter=tree:0 https://github.com/theos/sdks/
          cd sdks
          git sparse-checkout set --no-cone iPhoneOS16.5.sdk
          git checkout
          mv *.sdk "$THEOS/sdks"

      - name: Download YouTube Plus (YTLite)
        id: download_ytp
        run: |
          deb_url="https://github.com/dayanch96/YTLite/releases/download/v${{ inputs.tweak_version }}/com.dvntm.ytlite_${{ inputs.tweak_version }}_iphoneos-arm.deb"
          echo "Fetching: $deb_url"
          curl -L --fail --retry 3 --retry-delay 2 -o "${{ github.workspace }}/ytplus.deb" "$deb_url"

      - name: Clone Open in YouTube (Safari extension)
        run: |
          git clone --quiet -n --depth=1 --filter=tree:0 https://github.com/CokePokes/YoutubeExtensions/
          cd YoutubeExtensions
          git sparse-checkout set --no-cone OpenYoutubeSafariExtension.appex
          git checkout
          mv *.appex "${{ github.workspace }}"

      - name: "(Optional) Headers and extra tweak repos"
        if: ${{ inputs.enable_youpip || inputs.enable_ytuhd || inputs.enable_yq || inputs.enable_ryd || inputs.enable_demc }}
        env:
          THEOS: ${{ github.workspace }}/theos
        run: |
          set -e
          if [ ! -d "$THEOS/include/YouTubeHeader" ]; then
            mkdir -p "$THEOS/include"
            git -C "$THEOS/include" clone --quiet --depth=1 https://github.com/PoomSmart/YouTubeHeader.git
          else
            git -C "$THEOS/include/YouTubeHeader" pull
          fi
          if [ ! -d "$THEOS/include/PSHeader" ]; then
            git -C "$THEOS/include" clone --quiet --depth=1 https://github.com/PoomSmart/PSHeader.git
          else
            git -C "$THEOS/include/PSHeader" pull
          fi
          cd "${{ github.workspace }}"
          [[ "${{ inputs.enable_youpip }}" == "true" ]] && git clone --quiet --depth=1 https://github.com/PoomSmart/YouPiP.git || true
          [[ "${{ inputs.enable_ytuhd }}" == "true" ]] && git clone --quiet --depth=1 https://github.com/PoomSmart/YTUHD.git || true
          [[ "${{ inputs.enable_ryd }}" == "true" ]] && git clone --quiet --depth=1 https://github.com/PoomSmart/Return-YouTube-Dislikes.git || true
          [[ "${{ inputs.enable_demc }}" == "true" ]] && git clone --quiet --recurse-submodules --depth=1 https://github.com/therealFoxster/DontEatMyContent.git || true
          [[ "${{ inputs.enable_yq }}" == "true" || "${{ inputs.enable_youpip }}" == "true" ]] && git clone --quiet --depth=1 https://github.com/PoomSmart/YTVideoOverlay.git || true
          [[ "${{ inputs.enable_yq }}" == "true" ]] && git clone --quiet --depth=1 https://github.com/PoomSmart/YouQuality.git || true

      - name: "(Optional) Build extra tweaks"
        if: ${{ inputs.enable_youpip || inputs.enable_ytuhd || inputs.enable_yq || inputs.enable_ryd || inputs.enable_demc }}
        env:
          THEOS: ${{ github.workspace }}/theos
        run: |
          set -e
          build_deb () { cd "$1"; make clean package DEBUG=0 FINALPACKAGE=1; mv packages/*.deb "${{ github.workspace }}/$2"; cd - >/dev/null; }
          [[ "${{ inputs.enable_youpip }}" == "true" ]] && build_deb "${{ github.workspace }}/YouPiP" youpip.deb || true
          [[ "${{ inputs.enable_ytuhd }}" == "true" ]] && build_deb "${{ github.workspace }}/YTUHD" ytuhd.deb || true
          [[ "${{ inputs.enable_ryd }}" == "true" ]] && build_deb "${{ github.workspace }}/Return-YouTube-Dislikes" ryd.deb || true
          [[ "${{ inputs.enable_demc }}" == "true" ]] && build_deb "${{ github.workspace }}/DontEatMyContent" demc.deb || true
          [[ "${{ inputs.enable_yq }}" == "true" ]] && build_deb "${{ github.workspace }}/YouQuality" yq.deb || true
          [[ -d "${{ github.workspace }}/YTVideoOverlay" ]] && build_deb "${{ github.workspace }}/YTVideoOverlay" ytvo.deb || true

      - name: "Final sanity check: IPA has Payload/*.app"
        run: |
          set -euo pipefail
          if ! unzip -l "$IPA_IN" | grep -qE ' Payload/[^/]+\.app/'; then
            echo "::error::$IPA_IN lacks Payload/*.app â€” provide a decrypted device IPA (not Simulator)."
            exit 1
          fi

      - name: Inject tweaks into IPA
        shell: bash
        run: |
          set -euo pipefail
          tweaks="ytplus.deb OpenYoutubeSafariExtension.appex"
          for f in ./*.deb; do
            if [[ -f "$f" && "$f" != *"ytplus.deb" ]]; then
              tweaks="$tweaks $f"
            fi
          done
          echo "Input IPA: $IPA_IN"
          echo "Tweaks: $tweaks"
          cyan -i "$IPA_IN" \
               -o "YouTubePlus_${{ inputs.tweak_version }}.ipa" \
               -uwef $tweaks \
               -n "${{ inputs.display_name }}" \
               -b "${{ inputs.bundle_id }}"
          ls -lah "YouTubePlus_${{ inputs.tweak_version }}.ipa"

      - name: Upload to GitHub Releases
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ytp-${{ github.run_number }}
          name: "YouTubePlus v${{ inputs.tweak_version }} (${{ github.run_number }})"
          files: "YouTubePlus_${{ inputs.tweak_version }}.ipa"
          draft: true

      - name: Output Release URL
        run: "echo '::notice::Release available at: https://github.com/${{ github.repository }}/releases'"
